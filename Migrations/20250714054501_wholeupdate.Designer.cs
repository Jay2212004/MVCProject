// <auto-generated />
using MVC_Task.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MVC_Task.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250714054501_wholeupdate")]
    partial class wholeupdate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MVC_Task.Models.Department", b =>
                {
                    b.Property<int>("DeptId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DeptId"));

                    b.Property<string>("DeptName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DeptId");

                    b.ToTable("Department");
                });

            modelBuilder.Entity("MVC_Task.Models.Documents", b =>
                {
                    b.Property<int>("DocId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DocId"));

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DocId");

                    b.HasIndex("EmpId");

                    b.ToTable("Document");
                });

            modelBuilder.Entity("MVC_Task.Models.Emp", b =>
                {
                    b.Property<int>("eid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("eid"));

                    b.Property<int>("DeptId")
                        .HasColumnType("int");

                    b.Property<int>("Mid")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ename")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("esalary")
                        .HasColumnType("float");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("eid");

                    b.HasIndex("DeptId");

                    b.HasIndex("Mid");

                    b.HasIndex("RoleId");

                    b.ToTable("employee");
                });

            modelBuilder.Entity("MVC_Task.Models.Manager", b =>
                {
                    b.Property<int>("Mid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Mid"));

                    b.Property<int>("DeptId")
                        .HasColumnType("int");

                    b.Property<string>("Mname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Mid");

                    b.HasIndex("DeptId");

                    b.ToTable("Manager");
                });

            modelBuilder.Entity("MVC_Task.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleId");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("MVC_Task.Models.Documents", b =>
                {
                    b.HasOne("MVC_Task.Models.Emp", "Emp")
                        .WithMany()
                        .HasForeignKey("EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Emp");
                });

            modelBuilder.Entity("MVC_Task.Models.Emp", b =>
                {
                    b.HasOne("MVC_Task.Models.Department", "Department")
                        .WithMany("emps")
                        .HasForeignKey("DeptId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MVC_Task.Models.Manager", "manager")
                        .WithMany("emps")
                        .HasForeignKey("Mid")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MVC_Task.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Role");

                    b.Navigation("manager");
                });

            modelBuilder.Entity("MVC_Task.Models.Manager", b =>
                {
                    b.HasOne("MVC_Task.Models.Department", "Department")
                        .WithMany("manager")
                        .HasForeignKey("DeptId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("MVC_Task.Models.Department", b =>
                {
                    b.Navigation("emps");

                    b.Navigation("manager");
                });

            modelBuilder.Entity("MVC_Task.Models.Manager", b =>
                {
                    b.Navigation("emps");
                });
#pragma warning restore 612, 618
        }
    }
}
